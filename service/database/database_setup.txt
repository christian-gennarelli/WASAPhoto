CREATE TABLE IF NOT EXISTS User (
    Username STRING PRIMARY KEY NOT NULL,
    ID STRING UNIQUE NOT NULL,
    Birthdate DATE,
    Name STRING
);
CREATE TABLE IF NOT EXISTS Post (
    PostID INTEGER AUTOINCREMENT PRIMARY KEY,
    Author VARCHAR(16) UNIQUE NOT NULL,
    CreationDatetime DATETIME,
    Description VARCHAR(128),
    FOREIGN KEY (Author) REFERENCES User(Username) ON DELETE CASCADE ON UPDATE CASCADE
);
CREATE TABLE IF NOT EXISTS Like (
    PostID INTEGER AUTOINCREMENT,
    Liker VARCHAR(16),
    PRIMARY KEY (PostID, Liker),
    FOREIGN KEY (PostID) REFERENCES Post(PostID), 
    FOREIGN KEY (Liker) REFERENCES User(Token) ON DELETE CASCADE ON UPDATE CASCADE
);
CREATE TABLE IF NOT EXISTS Follow (
    Follower VARCHAR(16) NOT NULL,
    Following VARCHAR(16) NOT NULL,
    PRIMARY KEY (Follower, Following),
    FOREIGN KEY (Following) REFERENCES User(Username) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (Following) REFERENCES User(Username) ON DELETE CASCADE ON UPDATE CASCADE
);
CREATE TABLE IF NOT EXISTS Comment (
    CommentID INTEGER AUTOINCREMENT PRIMARY KEY,
    PostID VARCHAR(64) NOT NULL,
    Author VARCHAR(16) UNIQUE NOT NULL,
    CreationDatetime DATETIME,
    Comment VARCHAR(128),
    FOREIGN KEY (Author) REFERENCES User(Username) ON DELETE CASCADE ON UPDATE CASCADE
);
CREATE TABLE IF NOT EXISTS Ban (
    Banner VARCHAR(16),
    Banned VARCHAR(16),
    PRIMARY KEY (Banner, Banned),
    FOREIGN KEY (Banned) REFERENCES User(Username) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (Banned) REFERENCES User(Username) ON DELETE CASCADE ON UPDATE CASCADE
);